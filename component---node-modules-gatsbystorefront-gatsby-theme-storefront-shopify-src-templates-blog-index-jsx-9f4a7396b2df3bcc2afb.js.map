{"version":3,"sources":["webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/utils/substrDescription.js","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Pagination/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/blog/BlogPage.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/blog/index.jsx"],"names":["substrDescription","description","length","trimmedString","substr","lastIndexOf","Math","min","PaginationWrap","Flex","PageNav","Button","Pagination","props","numPages","currentPage","shopifyThemePath","prevLink","nextLink","justifyContent","fontSize","as","GatsbyLink","to","width","mr","p","sx","letterSpacing","rel","variant","opacity","Array","from","map","_","i","link","pageNum","max","mx","key","borderTop","borderBottom","fontWeight","ml","BlogPage","blogTitle","flexDirection","px","pt","style","maxWidth","alignItems","m","data","articles","nodes","article","shopifyId","title","excerpt","content","publishedAt","fields","my","py","textAlign","pageContext","articlesQuery","blog","storeName","store","siteMetadata","gatsbyStorefrontConfig","Layout","Helmet","titleTemplate","defer","name"],"mappings":"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","file":"component---node-modules-gatsbystorefront-gatsby-theme-storefront-shopify-src-templates-blog-index-jsx-9f4a7396b2df3bcc2afb.js","sourcesContent":["const substrDescription = (description = '', length = false) => {\n  if (length && description.length > length) {\n    //trim the string to the maximum length\n    let trimmedString = description.substr(0, length);\n    //re-trim if we are in the middle of a word\n\n    if (trimmedString.lastIndexOf('.') > 0) {\n      trimmedString = trimmedString.substr(\n        0,\n        trimmedString.lastIndexOf('.') + 1\n      );\n    } else {\n      trimmedString =\n        trimmedString.substr(\n          0,\n          Math.min(trimmedString.length, trimmedString.lastIndexOf(' '))\n        ) + '...';\n    }\n    return trimmedString;\n  } else {\n    return description;\n  }\n};\n\nexport default substrDescription;\n","import React, { Fragment } from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport styled from '@emotion/styled/macro';\nimport { Flex, Button } from 'rebass';\n\n\nconst PaginationWrap = styled(Flex)`\n  border: 1px solid #e6e6e6;\n  border-left: 0;\n  border-right: 0;\n`\n\nconst PageNav = styled(Button)`\n  border-radius: 0;\n`\n\nconst Pagination = props => {\n  const { numPages, currentPage, shopifyThemePath } = props;\n  const showNumbers = 2;\n\n  let prevLink = false;\n  let nextLink = false;\n\n  if (currentPage !== 1) {\n    prevLink = shopifyThemePath + '/' + (currentPage - 1);\n  }\n  if (currentPage === 2) {\n    prevLink = shopifyThemePath;\n  }\n  if (currentPage !== numPages) {\n    nextLink = shopifyThemePath + '/' + (currentPage + 1);\n  }\n\n  return (\n    <Fragment>\n      <PaginationWrap justifyContent=\"center\" fontSize={['3vw', '1.5vw', '1vw']}>\n        {prevLink ? (\n          <PageNav\n            as={GatsbyLink}\n            to={prevLink}\n            width={['30vw', '14vw', '12vw']}\n            mr='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"prev\"\n            variant=\"pagination\"\n          >\n            Previous\n          </PageNav>\n        ) : (\n          <PageNav\n            width={['30vw', '14vw', '12vw']}\n            mr='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"next\"\n            variant=\"pagination\"\n            opacity='0.6'\n          >\n            Previous\n          </PageNav>\n        )}\n\n        {Array.from({ length: numPages }).map((_, i) => {\n          let pageNum = i + 1;\n\n          if (\n            pageNum >= Math.max(1, currentPage - showNumbers) &&\n            pageNum <= Math.min(currentPage + showNumbers, numPages)\n          ) {\n            if (pageNum === currentPage) {\n              return (\n                <PageNav mx='auto' p={['4vw', '2vw']} variant=\"pagination-active\" key={pageNum} sx={{ borderTop: '2px solid', borderBottom: '2px solid', fontWeight: 'bold' }}>\n                  {pageNum}\n                </PageNav>\n              );\n            } else {\n              let link;\n              pageNum === 1\n                ? (link = shopifyThemePath)\n                : (link = shopifyThemePath + '/' + pageNum);\n              return (\n                <PageNav\n                  as={GatsbyLink}\n                  to={link}\n                  mx='auto'\n                  p={['4vw', '2vw']}\n                  variant=\"pagination\"\n                  key={pageNum}\n                >\n                  {pageNum}\n                </PageNav>\n              );\n            }\n          } else {\n            return '';\n          }\n        })}\n\n        {nextLink ? (\n          <PageNav\n            as={GatsbyLink}\n            to={nextLink}\n            width={['30vw', '14vw', '12vw']}\n            ml='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"next\"\n            variant=\"pagination\"\n          >\n            Next\n          </PageNav>\n        ) : (\n          <PageNav\n            width={['30vw', '14vw', '12vw']}\n            ml='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"next\"\n            variant=\"pagination\"\n            opacity='0.6'\n          >\n            Next\n          </PageNav>\n        )}\n      </PaginationWrap>\n    </Fragment>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport { Flex, Box, Text, Heading } from 'rebass';\n\nimport Pagination from '../../components/Pagination';\nimport substrDescription from '../../utils/substrDescription.js';\n\nconst BlogPage = ({ blogTitle, ...props }) => {\n  return (\n    <Flex\n      flexDirection=\"column\"\n      px={2}\n      pt={3}\n      mx=\"auto\"\n      style={{ maxWidth: 1300 }}\n      alignItems=\"center\"\n    >\n      <Heading as=\"h1\" fontSize={[30, 36, 42]} m={3}>\n        {blogTitle}\n      </Heading>\n\n      {props.data.articles.nodes.map(article => {\n        let {\n          shopifyId,\n          title,\n          excerpt,\n          content,\n          publishedAt,\n          fields: { shopifyThemePath },\n        } = article;\n\n        return (\n          <Flex\n            key={shopifyId}\n            flexDirection=\"column\"\n            sx={{\n              maxWidth: '800px',\n              width: [370, '100%'],\n              mx: 3,\n              my: 3,\n            }}\n          >\n            <Box my={2}>\n              <Heading\n                as={GatsbyLink}\n                to={shopifyThemePath}\n                variant=\"link\"\n                fontSize={[30, 36]}\n              >\n                {title}\n              </Heading>\n            </Box>\n            <Box fontSize={2}>{publishedAt}</Box>\n            <Box>{excerpt ? excerpt : substrDescription(content, 500)}</Box>\n          </Flex>\n        );\n      })}\n      <Box width={1} px={4} py={2} key=\"pagination\">\n        <Text textAlign=\"center\">\n          <Pagination {...props.pageContext} />\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default BlogPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../../components/Layout';\nimport BlogPage from './BlogPage';\n\nexport default props => {\n  const { title: blogTitle } = props.data.blog.nodes[0];\n  const { storeName } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\n\n  return (\n    <Layout>\n      <Helmet\n        title={blogTitle}\n        titleTemplate={`%s — ${storeName}`}\n        defer={false}\n      >\n        <meta name=\"description\" content={blogTitle} />\n      </Helmet>\n      <BlogPage {...props} blogTitle={blogTitle} />\n    </Layout>\n  );\n};\n\nexport const articlesQuery = graphql`\n  query BlogQuery($shopifyId: String!, $limit: Int, $skip: Int) {\n    articles: allShopifyArticle(\n      filter: { blog: { shopifyId: { eq: $shopifyId } } }\n      limit: $limit\n      skip: $skip\n      sort: { fields: publishedAt }\n    ) {\n      nodes {\n        shopifyId\n        title\n        excerpt\n        content\n        publishedAt(formatString: \"ddd MMMM Do, YYYY\")\n        fields {\n          shopifyThemePath\n        }\n      }\n    }\n    blog: allShopifyBlog(filter: { shopifyId: { eq: $shopifyId } }) {\n      nodes {\n        shopifyId\n        title\n        fields {\n          shopifyThemePath\n        }\n      }\n    }\n    store: site {\n      siteMetadata {\n        gatsbyStorefrontConfig {\n          storeName\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}