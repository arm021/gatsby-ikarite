{"version":3,"sources":["webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Icons/NoImage/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/AddToCart/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Badge/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/IndividualProduct.jsx"],"names":["NoImage","props","justifyContent","width","height","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","AddToCart","addItem","useShopifyFunctions","title","shopifyId","amount","cartUrl","isSelectOptions","addToCartHandler","a","variantId","quantity","then","res","navigate","rej","console","error","catch","Error","as","GatsbyLink","onClick","Diamond","Box","Badge","borderRadius","text","format","size","textColor","bgColor","mx","my","color","alignItems","justifyItems","sx","display","fontWeight","fontSize","preserveAspectRatio","id","in","stdDeviation","dx","dy","result","React","memo","ProductCard","IndividualProduct","product","useStaticQuery","site","siteMetadata","gatsbyStorefrontConfig","locales","currency","priceRange","minPrice","minVariantPrice","maxPrice","maxVariantPrice","availableForSale","variants","tags","fields","shopifyThemePath","firstImage","hasPriceRange","hasOneVariant","length","minDisplayPrice","formatPrice","maxDisplayPrice","compareAtPrice","compareAtPriceFmormatted","hasSaleBadge","Title","Heading","CompareAtPrice","AddToCartStyled","AddToCardGroupBox","px","py","mb","position","transform","left","map","tag","strings","new","key","v","i","sale","soldout","overflow","p","to","style","textDecoration","originalSrc","src","alt","textAlign","bg","addToCart","lineHeight","selectOptions"],"mappings":"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","file":"faf3f8f3cfba15e6e8e7ddbae2a38d47c03de62b-32778f3307ce014244e0.js","sourcesContent":["import React from 'react';\nimport { Flex } from 'rebass';\n\nconst NoImage = props => {\n  return (\n    <Flex {...props} justifyContent=\"center\">\n      <svg\n        width={props.width ? props.width : '100%'}\n        height={props.height ? props.height : '100%'}\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        data-prefix=\"far\"\n        data-icon=\"image\"\n        className=\"svg-inline--fa fa-image fa-w-16\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"\n        ></path>\n      </svg>\n    </Flex>\n  );\n};\n\nexport default NoImage;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport GatsbyLink from 'gatsby-link';\nimport { navigate } from 'gatsby-link';\nimport useShopifyFunctions from '../../hooks/useShopifyFunctions';\n\nconst AddToCart = props => {\n  const { addItem } = useShopifyFunctions();\n  const { title, shopifyId, amount, cartUrl, isSelectOptions = false } = props;\n\n  const addToCartHandler = async (shopifyId, amount, cartUrl) => {\n    addItem({ variantId: shopifyId, quantity: amount })\n      .then(\n        res => {\n          navigate(cartUrl);\n        },\n        rej => {\n          console.error(rej);\n        }\n      )\n      .catch(error => {\n        throw new Error(error);\n      });\n  };\n\n  return !isSelectOptions ? (\n    <Text\n      onClick={() => {\n        addToCartHandler(shopifyId, amount, cartUrl);\n      }}\n      {...props}\n    >\n      {title}\n    </Text>\n  ) : (\n    <Text as={GatsbyLink} {...props}>\n      {title}\n    </Text>\n  );\n};\n\nexport default AddToCart;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\nimport styled from '@emotion/styled/macro';\n\nconst Diamond = styled(Box)`\n  position: relative;\n  height: 100%;\n  width:  100%;\n  line-height: 3.5;\n  text-align: center;\n\n  svg {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    width: 100%;\n    z-index: -1;\n  }\n\n  path {\n    fill: inherit;\n    stroke: transparent;\n    -webkit-filter: url(#dropshadow);\n    filter: url(#dropshadow);\n  }\n`\n\nconst Badge = (props) => {\n  const {\n    text,\n    format = 'box',\n    size = 50,\n    width = ['20vw', '5vw'],\n    height = ['10vw', '3vw'],\n    textColor = 'white',\n    bgColor = 'badge',\n    fill = bgColor,\n    mx,\n    my,\n  } = props;\n\n  let borderRadius;\n  if (format === 'circle') {\n    borderRadius = 9999;\n  } else if (format === 'box') {\n    borderRadius = 0;\n  }\n\n  return (\n    <Flex\n      color={textColor}\n      alignItems=\"center\"\n      justifyItems=\"center\"\n      justifyContent=\"center\"\n      mx={mx}\n      my={my}\n      sx={{\n        display: 'inline-block',\n        width,\n        height,\n        borderRadius,\n        fill,\n      }}\n    >\n      \n      <Diamond fontWeight=\"heading\" fontSize={['2.5vw', '.8vw']}>\n        <svg viewBox='0 0 100 100' preserveAspectRatio='none'>\n          <filter id=\"dropshadow\" height=\"125%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1\" />\n            <feOffset dx=\"0\" dy=\"0\" result=\"offsetblur\" />\n            <feMerge>\n              <feMergeNode/>\n              <feMergeNode in=\"SourceGraphic\" />\n            </feMerge>\n          </filter>\n          <path d='M2,50 50,2 98,50 50,98z' />\n        </svg>\n        {text}\n      </Diamond>\n    </Flex>\n  );\n};\n\nexport default React.memo(Badge);\n","import React from 'react';\nimport { Box, Heading, Text } from 'rebass';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport GatsbyLink from 'gatsby-link';\nimport styled from '@emotion/styled/macro';\n\nimport AddToCart from '../../components/AddToCart';\nimport Badge from '../../components/Badge';\nimport NoImage from '../../components/Icons/NoImage';\nimport formatPrice from '../../utils/formatPrice';\nimport strings from './strings.json';\n\nconst ProductCard = styled(Box)`\n  display: inline-block;\n`\n\nconst IndividualProduct = ({ product }) => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          gatsbyStorefrontConfig {\n            locales\n            currency\n          }\n        }\n      }\n    }\n  `);\n  const { locales, currency } = data.site.siteMetadata.gatsbyStorefrontConfig;\n\n  const {\n    priceRange: {\n      minVariantPrice: { amount: minPrice },\n      maxVariantPrice: { amount: maxPrice },\n    },\n    availableForSale,\n    variants,\n    title,\n    tags,\n    fields: { shopifyThemePath, firstImage },\n    cartUrl,\n  } = product;\n\n  const hasPriceRange = minPrice !== maxPrice;\n  const hasOneVariant = variants.length === 1;\n\n  const minDisplayPrice = formatPrice(minPrice, locales, currency);\n  const maxDisplayPrice = formatPrice(maxPrice, locales, currency);\n\n  const { compareAtPrice } = variants[0];\n  const compareAtPriceFmormatted = formatPrice(\n    variants[0].compareAtPrice,\n    locales,\n    currency\n  );\n\n  let hasSaleBadge = false;\n\n  // Empty styled components used for targeting as selectors\n  // https://emotion.sh/docs/styled#targeting-another-emotion-component\n  const Title = styled(Heading)``;\n\n  const CompareAtPrice = styled.strike`\n    color: #c0c0c0;\n  `;\n\n  const AddToCartStyled = styled(AddToCart)`\n    position: absolute;\n    cursor: pointer;\n    z-index: 1;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    transition-property: all;\n    transition-duration: 0.3s;\n    transition-timing-function: ease-in-out;\n    transition-delay: 0s;\n  `;\n\n  const AddToCardGroupBox = styled(Box)`\n    // Transform image:\n    & img {\n      width: 100%;\n      height: 100%;\n      object-fit: contain;\n      transition-property: all;\n      transition-duration: 0.6s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n\n    &:hover img {\n      transform: scale(1.05);\n      transition-property: all;\n      transition-duration: 0.6s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n\n    // Show/hide \"Add to card\" text:\n    &:hover ${AddToCartStyled} {\n      opacity: 100;\n      transform: translateY(-15px);\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n    & ${AddToCartStyled} {\n      opacity: 0;\n      margin-top: 15px;\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n\n    &:hover ${Title} {\n      opacity: 0;\n      transform: translateY(-15px);\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n    & ${Title} {\n      opacity: 100;\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n  `;\n\n  return (\n    <ProductCard px={4} py={2} mb={4} width={[1, 1 / 4]} fontSize={['2.4vh', '2.2vh']}>\n      <AddToCardGroupBox>\n        <Box>\n          <Box sx={{ display: 'inline-block', position: 'relative', transform: 'translateX(-50%)', left: '-20%', 'z-index': 9 }}>\n            {tags.map((tag) => {\n              if (tag === 'new' && availableForSale) {\n                return (\n                  <Badge\n                    text={strings.new}\n                    bgColor=\"badgeNew\"\n                    my={1}\n                    key={strings.new}\n                  />\n                );\n              } else return '';\n            })}\n            {variants.map((v, i) => {\n              if (\n                v.availableForSale &&\n                v.compareAtPrice &&\n                !hasSaleBadge &&\n                availableForSale\n              ) {\n                hasSaleBadge = true;\n                return (\n                  <Badge\n                    text={strings.sale}\n                    bgColor=\"addToCart\"\n                    my={1}\n                    key={`${strings.sale}+${i}`}\n                  />\n                );\n              } else return '';\n            })}\n            {!availableForSale ? (\n              <Badge\n                text={strings.soldout}\n                width={90}\n                height={35}\n                bgColor=\"badgeSoldout\"\n                format=\"box\"\n                my={1}\n                key={strings.soldout}\n              />\n            ) : (\n              ''\n            )}\n          </Box>\n\n          {/* Product image */}\n          <Box sx={{ overflow: 'hidden', mb: 2, p: ['5vw', '2vw'], height: ['50vw', '15vw'] }}>\n            <GatsbyLink\n              to={shopifyThemePath}\n              style={{ textDecoration: 'none' }}\n            >\n              {firstImage && firstImage.originalSrc ? (\n                <img src={firstImage.originalSrc} alt={title} />\n              ) : (\n                <NoImage width=\"100%\" height=\"100%\" color=\"grey\" p={4} />\n              )}\n            </GatsbyLink>\n          </Box>\n\n          {/* Product title */}\n          <Box sx={{ position: 'relative', textAlign: 'center', bg: 'background' }} mb={1}>\n            {hasOneVariant ? (\n              <AddToCartStyled\n                title={strings.addToCart}\n                shopifyId={variants[0].shopifyId}\n                amount={1}\n                cartUrl={cartUrl}\n                sx={{ py: 3, color: 'addToCart', lineHeight: '1.25' }}\n              />\n            ) : (\n              <AddToCartStyled\n                isSelectOptions=\"true\"\n                title={strings.selectOptions}\n                to={shopifyThemePath}\n                sx={{\n                  color: 'addToCart',\n                  ':hover,:focus,.active': {\n                    color: 'addToCart',\n                    textDecoration: 'none',\n                  },\n                  py: 3,lineHeight: '1.25'\n                }}\n              />\n            )}\n\n            <Title fontSize={'2.2vh'} sx={{ py: 3, height: ['15vh', '13vh', '10vh'], overflow: 'hidden' }} >\n              {title}\n            </Title>\n          </Box>\n          \n          {/* Price */}\n          <Box>\n            <Text sx={{ color: 'addToCart', fontWeight: 'heading' }}>\n              {minDisplayPrice} {hasPriceRange && `- ${maxDisplayPrice}`}{' '}\n              {hasOneVariant && compareAtPrice > minPrice && (\n                <CompareAtPrice>{compareAtPriceFmormatted}</CompareAtPrice>\n              )}\n            </Text>\n          </Box>\n        </Box>\n      </AddToCardGroupBox>\n    </ProductCard>\n  );\n};\n\nexport default IndividualProduct;\n"],"sourceRoot":""}