{"version":3,"sources":["webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Icons/NoImage/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Pagination/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/AddToCart/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Badge/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/IndividualProduct.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogPage.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogPageBlue.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogPagePink.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogPageTeal.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/index.jsx"],"names":["NoImage","props","justifyContent","width","height","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","PaginationWrap","Flex","PageNav","Button","Pagination","numPages","currentPage","shopifyThemePath","prevLink","nextLink","as","GatsbyLink","to","mr","p","sx","letterSpacing","rel","variant","Array","from","length","map","_","i","link","pageNum","Math","max","min","mx","key","borderTop","borderBottom","fontWeight","ml","AddToCart","addItem","useShopifyFunctions","title","shopifyId","amount","cartUrl","isSelectOptions","addToCartHandler","a","variantId","quantity","then","res","navigate","rej","console","error","catch","Error","onClick","Badge","borderRadius","text","format","size","textColor","bgColor","my","color","bg","alignItems","justifyItems","display","fontSize","fontFamily","React","memo","ProductCard","Box","IndividualProduct","product","gatsbyImageProps","useStaticQuery","site","siteMetadata","gatsbyStorefrontConfig","locales","currency","priceRange","minPrice","minVariantPrice","maxPrice","maxVariantPrice","availableForSale","variants","tags","fields","firstImage","hasPriceRange","hasOneVariant","minDisplayPrice","formatPrice","maxDisplayPrice","compareAtPrice","compareAtPriceFmormatted","hasSaleBadge","Title","Heading","CompareAtPrice","AddToCartStyled","AddToCardGroupBox","px","py","mb","m","position","tag","strings","new","v","sale","soldout","overflow","style","textDecoration","originalSrc","src","alt","top","padding","textAlign","addToCart","lineHeight","selectOptions","StyledBox","CollectionDesc","CatalogPage","data","store","pageContext","limit","skip","collection","nodes","description","products","forEach","node","pt","background","pb","backgroundColor","index","CatalogPagePink","CatalogPageTeal","catalogQuery","handle","storeName","Layout","Helmet","titleTemplate","defer","name","content","CatalogPageBlue"],"mappings":"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","file":"component---node-modules-gatsbystorefront-gatsby-theme-storefront-shopify-src-templates-catalog-index-jsx-892f1081309a7f7f0b57.js","sourcesContent":["import React from 'react';\nimport { Flex } from 'rebass';\n\nconst NoImage = props => {\n  return (\n    <Flex {...props} justifyContent=\"center\">\n      <svg\n        width={props.width ? props.width : '100%'}\n        height={props.height ? props.height : '100%'}\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        data-prefix=\"far\"\n        data-icon=\"image\"\n        className=\"svg-inline--fa fa-image fa-w-16\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"\n        ></path>\n      </svg>\n    </Flex>\n  );\n};\n\nexport default NoImage;\n","import React, { Fragment } from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport styled from '@emotion/styled/macro';\nimport { Flex, Button } from 'rebass';\n\n\nconst PaginationWrap = styled(Flex)`\n  border: 1px solid #e6e6e6;\n  border-left: 0;\n  border-right: 0;\n`\n\nconst PageNav = styled(Button)`\n  border-radius: 0;\n`\n\nconst Pagination = props => {\n  const { numPages, currentPage, shopifyThemePath } = props;\n  const showNumbers = 2;\n\n  let prevLink = false;\n  let nextLink = false;\n\n  if (currentPage !== 1) {\n    prevLink = shopifyThemePath + '/' + (currentPage - 1);\n  }\n  if (currentPage === 2) {\n    prevLink = shopifyThemePath;\n  }\n  if (currentPage !== numPages) {\n    nextLink = shopifyThemePath + '/' + (currentPage + 1);\n  }\n\n  return (\n    <Fragment>\n      <PaginationWrap justifyContent=\"center\">\n        {prevLink ? (\n          <PageNav\n            as={GatsbyLink}\n            to={prevLink}\n            width={['30vw', '14vw', '12vw']}\n            mr='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"prev\"\n            variant=\"pagination\"\n          >\n            Previous\n          </PageNav>\n        ) : (\n          <PageNav\n            as={GatsbyLink}\n            to={prevLink}\n            width={['30vw', '14vw', '12vw']}\n            mr='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"prev\"\n            variant=\"pagination\"\n          >\n            Previous\n          </PageNav>\n        )}\n\n        {Array.from({ length: numPages }).map((_, i) => {\n          let pageNum = i + 1;\n\n          if (\n            pageNum >= Math.max(1, currentPage - showNumbers) &&\n            pageNum <= Math.min(currentPage + showNumbers, numPages)\n          ) {\n            if (pageNum === currentPage) {\n              return (\n                <PageNav mx='auto' p={['4vw', '2vw']} variant=\"pagination-active\" key={pageNum} sx={{ borderTop: '2px solid', borderBottom: '2px solid', fontWeight: 'bold' }}>\n                  {pageNum}\n                </PageNav>\n              );\n            } else {\n              let link;\n              pageNum === 1\n                ? (link = shopifyThemePath)\n                : (link = shopifyThemePath + '/' + pageNum);\n              return (\n                <PageNav\n                  as={GatsbyLink}\n                  to={link}\n                  mx='auto'\n                  p={['4vw', '2vw']}\n                  variant=\"pagination\"\n                  key={pageNum}\n                >\n                  {pageNum}\n                </PageNav>\n              );\n            }\n          } else {\n            return '';\n          }\n        })}\n\n        {nextLink ? (\n          <PageNav\n            as={GatsbyLink}\n            to={nextLink}\n            width={['30vw', '14vw', '12vw']}\n            ml='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"next\"\n            variant=\"pagination\"\n          >\n            Next\n          </PageNav>\n        ) : (\n          <PageNav\n            as={GatsbyLink}\n            to={nextLink}\n            width={['30vw', '14vw', '12vw']}\n            ml='auto'\n            p={['4vw', '2vw']}\n            sx={{ letterSpacing: ['.4vw', '.2vw'] }}\n            rel=\"next\"\n            variant=\"pagination\"\n          >\n            Next\n          </PageNav>\n        )}\n      </PaginationWrap>\n    </Fragment>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Text } from 'rebass';\nimport GatsbyLink from 'gatsby-link';\nimport { navigate } from 'gatsby-link';\nimport useShopifyFunctions from '../../hooks/useShopifyFunctions';\n\nconst AddToCart = props => {\n  const { addItem } = useShopifyFunctions();\n  const { title, shopifyId, amount, cartUrl, isSelectOptions = false } = props;\n\n  const addToCartHandler = async (shopifyId, amount, cartUrl) => {\n    addItem({ variantId: shopifyId, quantity: amount })\n      .then(\n        res => {\n          navigate(cartUrl);\n        },\n        rej => {\n          console.error(rej);\n        }\n      )\n      .catch(error => {\n        throw new Error(error);\n      });\n  };\n\n  return !isSelectOptions ? (\n    <Text\n      onClick={() => {\n        addToCartHandler(shopifyId, amount, cartUrl);\n      }}\n      {...props}\n    >\n      {title}\n    </Text>\n  ) : (\n    <Text as={GatsbyLink} {...props}>\n      {title}\n    </Text>\n  );\n};\n\nexport default AddToCart;\n","import React from 'react';\nimport { Flex, Box } from 'rebass';\n\nconst Badge = (props) => {\n  const {\n    text,\n    format = 'circle',\n    size = [48, 58],\n    width = size,\n    height = size,\n    textColor = 'white',\n    bgColor = 'badge',\n    mx,\n    my,\n  } = props;\n\n  let borderRadius;\n  if (format === 'circle') {\n    borderRadius = 9999;\n  } else if (format === 'box') {\n    borderRadius = 15;\n  }\n\n  return (\n    <Flex\n      color={textColor}\n      bg={bgColor}\n      alignItems=\"center\"\n      justifyItems=\"center\"\n      justifyContent=\"center\"\n      mx={mx}\n      my={my}\n      sx={{\n        display: 'inline-block',\n        fontSize: 1,\n        width,\n        height,\n        borderRadius,\n      }}\n    >\n      <Box fontFamily=\"body\">{text}</Box>\n    </Flex>\n  );\n};\n\nexport default React.memo(Badge);\n","import React from 'react';\nimport { Box, Card, Heading, Text } from 'rebass';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport GatsbyImage from 'gatsby-image';\nimport GatsbyLink from 'gatsby-link';\nimport styled from '@emotion/styled/macro';\n\nimport AddToCart from '../../components/AddToCart';\nimport Badge from '../../components/Badge';\nimport NoImage from '../../components/Icons/NoImage';\nimport formatPrice from '../../utils/formatPrice';\nimport strings from './strings.json';\n\n\nconst ProductCard = styled(Box)`\n  display: inline-block;\n`\n\nconst IndividualProduct = ({ product, gatsbyImageProps }) => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          gatsbyStorefrontConfig {\n            locales\n            currency\n          }\n        }\n      }\n    }\n  `);\n  const { locales, currency } = data.site.siteMetadata.gatsbyStorefrontConfig;\n\n  const {\n    priceRange: {\n      minVariantPrice: { amount: minPrice },\n      maxVariantPrice: { amount: maxPrice },\n    },\n    availableForSale,\n    variants,\n    title,\n    tags,\n    fields: { shopifyThemePath, firstImage },\n    cartUrl,\n  } = product;\n\n  const hasPriceRange = minPrice !== maxPrice;\n  const hasOneVariant = variants.length === 1;\n\n  const minDisplayPrice = formatPrice(minPrice, locales, currency);\n  const maxDisplayPrice = formatPrice(maxPrice, locales, currency);\n\n  const { compareAtPrice } = variants[0];\n  const compareAtPriceFmormatted = formatPrice(\n    variants[0].compareAtPrice,\n    locales,\n    currency\n  );\n\n  let hasSaleBadge = false;\n\n  // Empty styled components used for targeting as selectors\n  // https://emotion.sh/docs/styled#targeting-another-emotion-component\n  const Image = styled(GatsbyImage)``;\n  const Title = styled(Heading)``;\n\n  const CompareAtPrice = styled.strike`\n    color: #c0c0c0;\n  `;\n\n  const AddToCartStyled = styled(AddToCart)`\n    position: absolute;\n    cursor: pointer;\n    z-index: 1;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    transition-property: all;\n    transition-duration: 0.3s;\n    transition-timing-function: ease-in-out;\n    transition-delay: 0s;\n  `;\n\n  const AddToCardGroupBox = styled(Box)`\n    // Transform image:\n    & img {\n      width: 100%;\n      object-fit: contain;\n      transition-property: all;\n      transition-duration: 0.6s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n      height: 15rem;\n    }\n\n    &:hover img {\n      transform: scale(1.05);\n      transition-property: all;\n      transition-duration: 0.6s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n\n    // Show/hide \"Add to card\" text:\n    &:hover ${AddToCartStyled} {\n      opacity: 100;\n      transform: translateY(-15px);\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n    & ${AddToCartStyled} {\n      opacity: 0;\n      margin-top: 15px;\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n\n    &:hover ${Title} {\n      opacity: 0;\n      transform: translateY(-15px);\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n    & ${Title} {\n      opacity: 100;\n      transition-property: all;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-delay: 0s;\n    }\n  `;\n\n  return (\n    <ProductCard px={4} py={2} mb={4} width={[1, 1 / 3, 1 / 4]}>\n      <AddToCardGroupBox>\n        <Box>\n          <Box\n            m={2}\n            sx={{ display: 'inline-block', position: 'absolute', 'z-index': 9 }}\n          >\n            {tags.map((tag) => {\n              if (tag === 'new' && availableForSale) {\n                return (\n                  <Badge\n                    text={strings.new}\n                    bgColor=\"badgeNew\"\n                    my={1}\n                    key={strings.new}\n                  />\n                );\n              } else return '';\n            })}\n            {variants.map((v, i) => {\n              if (\n                v.availableForSale &&\n                v.compareAtPrice &&\n                !hasSaleBadge &&\n                availableForSale\n              ) {\n                hasSaleBadge = true;\n                return (\n                  <Badge\n                    text={strings.sale}\n                    bgColor=\"important\"\n                    my={1}\n                    key={`${strings.sale}+${i}`}\n                  />\n                );\n              } else return '';\n            })}\n            {!availableForSale ? (\n              <Badge\n                text={strings.soldout}\n                width={90}\n                height={35}\n                bgColor=\"badgeSoldout\"\n                format=\"box\"\n                my={1}\n                key={strings.soldout}\n              />\n            ) : (\n              ''\n            )}\n          </Box>\n\n          {/* Product image */}\n          <Box sx={{ overflow: 'hidden', mb: 2 }}>\n            <GatsbyLink\n              to={shopifyThemePath}\n              style={{ textDecoration: 'none' }}\n            >\n              {firstImage && firstImage.originalSrc ? (\n                <img src={firstImage.originalSrc} alt={title} sx={{ top: ['-2rem', '-3rem', '-5rem'], padding: ['7vw', '2vw'], width: '100%' }} />\n              ) : (\n                <NoImage width=\"100%\" height=\"100%\" color=\"grey\" p={4} />\n              )}\n            </GatsbyLink>\n          </Box>\n\n          {/* Product title */}\n          <Box sx={{ position: 'relative', textAlign: 'center' }} mb={1}>\n            {hasOneVariant ? (\n              <AddToCartStyled\n                title={strings.addToCart}\n                shopifyId={variants[0].shopifyId}\n                amount={1}\n                cartUrl={cartUrl}\n                sx={{\n                  color: 'addToCart',\n                  bg: 'white',\n                  fontFamily: 'body',\n                  fontSize: [1, 2, 3],\n                  fontWeight: 'normal',\n                  lineHeight: '1.25',\n                  py: 3,\n                }}\n              />\n            ) : (\n              <AddToCartStyled\n                isSelectOptions=\"true\"\n                title={strings.selectOptions}\n                to={shopifyThemePath}\n                sx={{\n                  color: 'addToCart',\n                  ':hover,:focus,.active': {\n                    color: 'addToCart',\n                    textDecoration: 'none',\n                  },\n                  bg: 'white',\n                  fontFamily: 'body',\n                  fontSize: [1, 2, 3],\n                  fontWeight: 'normal',\n                  lineHeight: '1.25',\n                  py: 3,\n                }}\n              />\n            )}\n\n            <Title as=\"h3\" sx={{ fontSize: 2, py: 3, height: ['auto', '120px', '100px'], overflow: 'hidden' }} >\n              {title}\n            </Title>\n          </Box>\n          \n          {/* Price */}\n          <Box>\n            <Text sx={{ color: 'black', fontSize: [1], fontWeight: 'bold' }}>\n              {minDisplayPrice} {hasPriceRange && `- ${maxDisplayPrice}`}{' '}\n              {hasOneVariant && compareAtPrice > minPrice && (\n                <CompareAtPrice>{compareAtPriceFmormatted}</CompareAtPrice>\n              )}\n            </Text>\n          </Box>\n        </Box>\n      </AddToCardGroupBox>\n    </ProductCard>\n  );\n};\n\nexport default IndividualProduct;\n","import React from 'react';\r\nimport { Flex, Box, Heading, Text } from 'rebass';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport IndividualProduct from './IndividualProduct';\r\nimport Pagination from '../../components/Pagination';\r\nimport CollectionStats from '../../components/CollectionStats';\r\n\r\nconst StyledBox = styled(Box)`\r\n  text-align: center;\r\n`\r\n\r\nconst CollectionDesc = styled(Box)`\r\n  line-height: 1.67;\r\n`\r\n\r\nfunction CatalogPage(props) {\r\n  const { gatsbyImageProps } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\r\n  const { limit, skip, cartUrl } = props.pageContext;\r\n  const { title, description } = props.data.collection.nodes[0];\r\n  let products = [];\r\n\r\n  props.data.collection.nodes.forEach((node) => {\r\n    products = [...products, ...node.products];\r\n  });\r\n\r\n  return (\r\n    <StyledBox pt={['26vw', '19vw', '16vw']} fontSize={['4vw', '1.8vw', '1.2vw']} sx={{ background: 'url(//cdn.shopify.com/s/files/1/0117/9005/7534/files/bg-face.jpg)' }}>\r\n      {/* Header */}\r\n      <Box px={['10vw', '8vw', '20vw']} pb={['5vw', null, '3vw']}>\r\n        <Box fontSize={[30, 36, 60]}>\r\n          {title}\r\n        </Box>\r\n        <CollectionDesc fontSize={['4vw', '2.1vw', '1.2vw']}>\r\n          {description}\r\n        </CollectionDesc>\r\n      </Box>\r\n        \r\n      {/* Products */}\r\n      <Box backgroundColor=\"background\" padding={'3vw'}>\r\n        <Box>\r\n          {products.map((product, index) => {\r\n            product['cartUrl'] = cartUrl;\r\n            if (index + 1 > skip && index + 1 <= skip + limit) {\r\n              return (\r\n                <IndividualProduct key={product.shopifyId} product={product} />\r\n              );\r\n            } else {\r\n              return '';\r\n            }\r\n          })}\r\n        </Box>\r\n\r\n        {/* Pagination */}\r\n        <Box width={1} key=\"pagination\">\r\n          <Text sx={{ position: 'relative'}}>\r\n            <Pagination {...props.pageContext} />\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </StyledBox>\r\n  );\r\n}\r\n\r\nexport default CatalogPage;\r\n","import React from 'react';\nimport { Flex, Box, Heading, Text } from 'rebass';\nimport styled from '@emotion/styled/macro';\n\nimport IndividualProduct from './IndividualProduct';\nimport Pagination from '../../components/Pagination';\nimport CollectionStats from '../../components/CollectionStats';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\n\nconst StyledBox = styled(Box)`\n  text-align: center;\n`\n\nconst CollectionDesc = styled(Box)`\n  line-height: 1.67;\n`\n\nfunction CatalogPage(props) {\n  const { gatsbyImageProps } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\n  const { limit, skip, cartUrl } = props.pageContext;\n  const { title, description } = props.data.collection.nodes[0];\n  let products = [];\n\n  props.data.collection.nodes.forEach((node) => {\n    products = [...products, ...node.products];\n  });\n\n  return (\n    <StyledBox pt={['26vw', '19vw', '16vw']} fontSize={['4vw', '1.8vw', '1.2vw']} sx={{ background: 'url(//cdn.shopify.com/s/files/1/0117/9005/7534/files/bg-face.jpg)' }}>\n      {/* Header */}\n      <Box px={['10vw', '8vw', '20vw']} pb={['5vw', null, '3vw']}>\n        <Box fontSize={[30, 36, 60]}>\n          {title}\n        </Box>\n        <CollectionDesc fontSize={['4vw', '2.1vw', '1.2vw']}>\n          {description}\n        </CollectionDesc>\n      </Box>\n        \n      {/* Products */}\n      <Box backgroundColor=\"background\" padding={'3vw'}>\n        <Box>\n          {products.map((product, index) => {\n            product['cartUrl'] = cartUrl;\n            if (index + 1 > skip && index + 1 <= skip + limit) {\n              return (\n                <IndividualProduct key={product.shopifyId} product={product} />\n              );\n            } else {\n              return '';\n            }\n          })}\n        </Box>\n\n        {/* Pagination */}\n        <Box width={1} key=\"pagination\">\n          <Text sx={{ position: 'relative'}}>\n            <Pagination {...props.pageContext} />\n          </Text>\n        </Box>\n      </Box>\n    </StyledBox>\n  );\n}\n\nexport default CatalogPage;\n","import React from 'react';\r\nimport { Flex, Box, Heading, Text } from 'rebass';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport IndividualProduct from './IndividualProduct';\r\nimport Pagination from '../../components/Pagination';\r\nimport CollectionStats from '../../components/CollectionStats';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nconst StyledBox = styled(Box)`\r\n  text-align: center;\r\n`\r\n\r\nconst CollectionDesc = styled(Box)`\r\n  line-height: 1.67;\r\n`\r\n\r\nfunction CatalogPagePink(props) {\r\n  const { gatsbyImageProps } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\r\n  const { limit, skip, cartUrl } = props.pageContext;\r\n  const { title, description } = props.data.collection.nodes[0];\r\n  let products = [];\r\n\r\n  props.data.collection.nodes.forEach((node) => {\r\n    products = [...products, ...node.products];\r\n  });\r\n\r\n  return (\r\n    <StyledBox pt={['26vw', '19vw', '16vw']} fontSize={['4vw', '1.8vw', '1.2vw']} sx={{ background: 'url(//cdn.shopify.com/s/files/1/0117/9005/7534/files/bg-pink.jpg)' }}>\r\n      {/* Header */}\r\n      <Box px={['10vw', '8vw', '20vw']} pb={['5vw', null, '3vw']}>\r\n        <Box fontSize={[30, 36, 60]}>\r\n          {title}\r\n        </Box>\r\n        <CollectionDesc fontSize={['4vw', '2.1vw', '1.2vw']}>\r\n          {description}\r\n        </CollectionDesc>\r\n      </Box>\r\n        \r\n      {/* Products */}\r\n      <Box backgroundColor=\"background\" padding={'3vw'}>\r\n        <Box>\r\n          {products.map((product, index) => {\r\n            product['cartUrl'] = cartUrl;\r\n            if (index + 1 > skip && index + 1 <= skip + limit) {\r\n              return (\r\n                <IndividualProduct key={product.shopifyId} product={product} />\r\n              );\r\n            } else {\r\n              return '';\r\n            }\r\n          })}\r\n        </Box>\r\n\r\n        {/* Pagination */}\r\n        <Box width={1} key=\"pagination\">\r\n          <Text sx={{ position: 'relative'}}>\r\n            <Pagination {...props.pageContext} />\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </StyledBox>\r\n  );\r\n}\r\n\r\nexport default CatalogPagePink;\r\n","import React from 'react';\r\nimport { Flex, Box, Heading, Text } from 'rebass';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport IndividualProduct from './IndividualProduct';\r\nimport Pagination from '../../components/Pagination';\r\nimport CollectionStats from '../../components/CollectionStats';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nconst StyledBox = styled(Box)`\r\n  text-align: center;\r\n`\r\n\r\nconst CollectionDesc = styled(Box)`\r\n  line-height: 1.67;\r\n`\r\n\r\nfunction CatalogPageTeal(props) {\r\n  const { gatsbyImageProps } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\r\n  const { limit, skip, cartUrl } = props.pageContext;\r\n  const { title, description } = props.data.collection.nodes[0];\r\n  let products = [];\r\n\r\n  props.data.collection.nodes.forEach((node) => {\r\n    products = [...products, ...node.products];\r\n  });\r\n\r\n  return (\r\n    <StyledBox pt={['26vw', '19vw', '16vw']} fontSize={['4vw', '1.8vw', '1.2vw']} sx={{ background: 'url(//cdn.shopify.com/s/files/1/0117/9005/7534/files/bg-teal.jpg)' }}>\r\n      {/* Header */}\r\n      <Box px={['10vw', '8vw', '20vw']} pb={['5vw', null, '3vw']}>\r\n        <Box fontSize={[30, 36, 60]}>\r\n          {title}\r\n        </Box>\r\n        <CollectionDesc fontSize={['4vw', '2.1vw', '1.2vw']}>\r\n          {description}\r\n        </CollectionDesc>\r\n      </Box>\r\n        \r\n      {/* Products */}\r\n      <Box backgroundColor=\"background\" padding={'3vw'}>\r\n        <Box>\r\n          {products.map((product, index) => {\r\n            product['cartUrl'] = cartUrl;\r\n            if (index + 1 > skip && index + 1 <= skip + limit) {\r\n              return (\r\n                <IndividualProduct key={product.shopifyId} product={product} />\r\n              );\r\n            } else {\r\n              return '';\r\n            }\r\n          })}\r\n        </Box>\r\n\r\n        {/* Pagination */}\r\n        <Box width={1} key=\"pagination\">\r\n          <Text sx={{ position: 'relative'}}>\r\n            <Pagination {...props.pageContext} />\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </StyledBox>\r\n  );\r\n}\r\n\r\nexport default CatalogPageTeal;\r\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../../components/Layout';\nimport CatalogPage from './CatalogPage';\nimport CatalogPageBlue from './CatalogPageBlue';\nimport CatalogPagePink from './CatalogPagePink';\nimport CatalogPageTeal from './CatalogPageTeal';\n\nexport default (props) => {\n  const { title, handle, description } = props.data.collection.nodes[0];\n  const { storeName } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\n  return (\n    <Layout>\n      <Helmet title={title} titleTemplate={`%s — ${storeName}`} defer={false}>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      {title === 'Face' ?\n        <CatalogPageBlue {...props} />\n      : title === 'Body' ?\n        <CatalogPagePink {...props} />\n      : title === 'Hair' ?\n        <CatalogPageTeal {...props} />\n      : \n        <CatalogPage {...props} />\n      }\n    </Layout>\n  );\n};\n\nexport const catalogQuery = graphql`\n  query CatalogQuery($handle: String) {\n    collection: allShopifyCollection(filter: { handle: { eq: $handle } }) {\n      nodes {\n        title\n        handle\n        description\n        products {\n          id\n          shopifyId\n          title\n          tags\n          productType\n          fields {\n            shopifyThemePath\n            firstImage {\n              altText\n              originalSrc\n            }\n          }\n          availableForSale\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n            maxVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n          variants {\n            shopifyId\n            availableForSale\n            compareAtPrice\n            price\n          }\n        }\n      }\n    }\n    tabs: allShopifyProduct {\n      nodes {\n        handle\n        tags\n      }\n    }\n    store: site {\n      siteMetadata {\n        gatsbyStorefrontConfig {\n          storeName\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}